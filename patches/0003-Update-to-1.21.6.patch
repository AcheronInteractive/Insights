From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Tue, 21 Oct 2025 22:06:30 -0700
Subject: [PATCH] Update to 1.21.6


diff --git a/Insights-NMS/Current/build.gradle.kts b/Insights-NMS/Current/build.gradle.kts
index e12737249358d7bbf19285ca03af09ddfce4e309..78ce7c98f25c5948b6bec0440bd5789ba4115bc7 100644
--- a/Insights-NMS/Current/build.gradle.kts
+++ b/Insights-NMS/Current/build.gradle.kts
@@ -1,3 +1,3 @@
 dependencies {
-    paperweight.paperDevBundle("1.21.3-R0.1-SNAPSHOT")
+    paperweight.paperDevBundle("1.21.6-R0.1-SNAPSHOT") // Insights-Patched - 1.21.6 Support
 }
diff --git a/Insights-NMS/Current/src/main/java/dev/frankheijden/insights/nms/impl/InsightsNMSImpl.java b/Insights-NMS/Current/src/main/java/dev/frankheijden/insights/nms/impl/InsightsNMSImpl.java
index 855c8eb2c2137b22a725932730685a8defc4a23d..afd3af1b178de2ff04b416ee3a4c44a8ed3c95fe 100644
--- a/Insights-NMS/Current/src/main/java/dev/frankheijden/insights/nms/impl/InsightsNMSImpl.java
+++ b/Insights-NMS/Current/src/main/java/dev/frankheijden/insights/nms/impl/InsightsNMSImpl.java
@@ -55,22 +55,48 @@ public class InsightsNMSImpl extends InsightsNMS {
         if (tagOptional.isEmpty()) return;
         CompoundTag tag = tagOptional.get();
 
-        ListTag sectionsTagList = tag.getList("sections", Tag.TAG_COMPOUND);
+        // Insights-Patched start - 1.21.5 Support (Taken from upstream PR#228)
+        final Optional<ListTag> optionalSections = tag.getList("sections");
+        if (optionalSections.isEmpty()) {
+            logger.severe(String.format(
+                CHUNK_ERROR,
+                chunkX,
+                0,
+                chunkZ,
+                "Sections tag missing"
+            ));
+            return;
+        }
+        ListTag sectionsTagList = optionalSections.get();
+        // Insights-Patched end - 1.21.5 Support (Taken from upstream PR#228)
 
         DataResult<PalettedContainer<BlockState>> dataResult;
         int nonNullSectionCount = 0;
         for (int i = 0; i < sectionsTagList.size(); i++) {
-            CompoundTag sectionTag = sectionsTagList.getCompound(i);
-            var chunkSectionPart = sectionTag.getByte("Y");
+            // Insights-Patched start - 1.21.5 Support (Taken from upstream PR#228)
+            final Optional<CompoundTag> optionalSectionTag = sectionsTagList.getCompound(i);
+            if (optionalSectionTag.isEmpty()) {
+                logger.severe(String.format(
+                    CHUNK_ERROR,
+                    chunkX,
+                    i,
+                    chunkZ,
+                    "Sections tag missing"
+                ));
+                continue;
+            }
+            CompoundTag sectionTag = optionalSectionTag.get();
+            var chunkSectionPart = sectionTag.getByte("Y").orElseThrow();
+            // Insights-Patched end - 1.21.5 Support (Taken from upstream PR#228)
             var sectionIndex = serverLevel.getSectionIndexFromSectionY(chunkSectionPart);
             if (sectionIndex < 0 || sectionIndex >= sectionsCount) continue;
 
             PalettedContainer<BlockState> blockStateContainer;
-            if (sectionTag.contains("block_states", Tag.TAG_COMPOUND)) {
+            if (sectionTag.contains("block_states")) { // Insights-Patched - 1.21.5 Support (Taken from upstream PR#228)
                 Codec<PalettedContainer<BlockState>> blockStateCodec = SerializableChunkData.BLOCK_STATE_CODEC;
                 dataResult = blockStateCodec.parse(
                         NbtOps.INSTANCE,
-                        sectionTag.getCompound("block_states")
+                        sectionTag.getCompound("block_states").orElseThrow() // Insights-Patched - 1.21.5 Support (Taken from upstream PR#228)
                 ).promotePartial(message -> logger.severe(String.format(
                         CHUNK_ERROR,
                         chunkX,
@@ -134,7 +160,7 @@ public class InsightsNMSImpl extends InsightsNMS {
         );
         if (tag == null) return;
 
-        readChunkEntities(tag.getList("Entities", Tag.TAG_COMPOUND), entityConsumer);
+        readChunkEntities(tag.getList("Entities").orElseThrow(), entityConsumer); // Insights-Patched - 1.21.5 Support (Taken from upstream PR#228)
     }
 
     private void readChunkEntities(ListTag listTag, Consumer<ChunkEntity> entityConsumer) {
@@ -144,20 +170,24 @@ public class InsightsNMSImpl extends InsightsNMS {
     }
 
     private void readChunkEntities(CompoundTag nbt, Consumer<ChunkEntity> entityConsumer) {
-        var typeOptional = net.minecraft.world.entity.EntityType.by(nbt);
+        var typeOptional = net.minecraft.world.entity.EntityType.byString(nbt.getString("id").orElseThrow()); // Insights-Patched - 1.21.6 Support (Taken from upstream PR#228)
         if (typeOptional.isPresent()) {
             String entityTypeName = net.minecraft.world.entity.EntityType.getKey(typeOptional.get()).getPath();
-            ListTag posList = nbt.getList("Pos", Tag.TAG_DOUBLE);
+            ListTag posList = nbt.getList("Pos").orElseThrow(); // Insights-Patched - 1.21.5 Support (Taken from upstream PR#228)
             entityConsumer.accept(new ChunkEntity(
                     EntityType.fromName(entityTypeName),
-                    Mth.floor(Mth.clamp(posList.getDouble(0), -3E7D, 3E7D)),
-                    Mth.floor(Mth.clamp(posList.getDouble(1), -2E7D, 2E7D)),
-                    Mth.floor(Mth.clamp(posList.getDouble(2), -3E7D, 3E7D))
+                    // Insights-Patched start - 1.21.5 Support (Taken from upstream PR#228)
+                    Mth.floor(Mth.clamp(posList.getDouble(0).orElseThrow(), -3E7D, 3E7D)),
+                    Mth.floor(Mth.clamp(posList.getDouble(1).orElseThrow(), -2E7D, 2E7D)),
+                    Mth.floor(Mth.clamp(posList.getDouble(2).orElseThrow(), -3E7D, 3E7D))
+                    // Insights-Patched end - 1.21.5 Support (Taken from upstream PR#228)
             ));
         }
 
-        if (nbt.contains("Passengers", Tag.TAG_LIST)) {
-            readChunkEntities(nbt.getList("Passengers", Tag.TAG_COMPOUND), entityConsumer);
+        // Insights-Patched start - 1.21.5 Support (Taken from upstream PR#228)
+        if (nbt.contains("Passengers")) {
+            readChunkEntities(nbt.getList("Passengers").orElseThrow(), entityConsumer);
+            // Insights-Patched end - 1.21.5 Support (Taken from upstream PR#228)
         }
     }
 
diff --git a/Insights/src/main/java/dev/frankheijden/insights/Insights.java b/Insights/src/main/java/dev/frankheijden/insights/Insights.java
index 9e7ca53a684bac9f1d708a3aaee0c5d734ef1fb8..56d6c6b8bd658765ef660eac8697d1e94d65615a 100644
--- a/Insights/src/main/java/dev/frankheijden/insights/Insights.java
+++ b/Insights/src/main/java/dev/frankheijden/insights/Insights.java
@@ -61,7 +61,7 @@ import java.util.Locale;
 
 public class Insights extends InsightsPlugin {
 
-    private static final Version minimumCompatibleVersion = Version.of(1, 20, 6);
+    private static final Version minimumCompatibleVersion = Version.of(1, 21, 5); // Insights-Patched - 1.21.5 Support (Taken from upstream PR#228)
 
     private static final String SETTINGS_FILE_NAME = "config.yml";
     private static final String MESSAGES_FILE_NAME = "messages.yml";
diff --git a/Insights/src/main/java/dev/frankheijden/insights/commands/util/CommandSenderMapper.java b/Insights/src/main/java/dev/frankheijden/insights/commands/util/CommandSenderMapper.java
index ff78c2337fc4ab6f156052533010ae16d5f6aa9b..a7f03e4598fe0ffb81456e88738a495cee828bf8 100644
--- a/Insights/src/main/java/dev/frankheijden/insights/commands/util/CommandSenderMapper.java
+++ b/Insights/src/main/java/dev/frankheijden/insights/commands/util/CommandSenderMapper.java
@@ -20,6 +20,7 @@ public class CommandSenderMapper implements SenderMapper<CommandSourceStack, Com
         return new CommandSourceStack() {
             @Override
             public @NotNull Location getLocation() {
+                if (location != null) return location; // Insights-Patched - 1.21.4 Support (Taken from PR#226 upstream)
                 if (sender instanceof Entity entity) {
                     return entity.getLocation();
                 }
@@ -35,8 +36,25 @@ public class CommandSenderMapper implements SenderMapper<CommandSourceStack, Com
 
             @Override
             public @Nullable Entity getExecutor() {
+                if (entity != null) return entity; // Insights-Patched - 1.21.4 Support (Taken from PR#226 upstream)
                 return sender instanceof Entity entity ? entity : null;
             }
+
+            // Insights-Patched start - 1.21.4 Support (Taken from PR#226 upstream)
+            private Location location = null;
+            private Entity entity = null;
+            @Override
+            public CommandSourceStack withLocation(final Location location) {
+                this.location = location;
+                return this;
+            }
+
+            @Override
+            public CommandSourceStack withExecutor(final Entity executor) {
+                this.entity = executor;
+                return this;
+            }
+            // Insights-Patched end - 1.21.4 Support (Taken from PR#226 upstream)
         };
     }
 }
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
index 6813cb26ee29d0d4aa12f999137308ce9262c630..ba4007a3c5302daeb4f07e8354b9168613757b11 100644
--- a/gradle/libs.versions.toml
+++ b/gradle/libs.versions.toml
@@ -1,23 +1,23 @@
 [versions]
 # libraries
 semver = "0.10.2"
-minecraft = "1.21.3-R0.1-SNAPSHOT"
+minecraft = "1.21.6-R0.1-SNAPSHOT" # Insights-Patched - 1.21.6 Support
 paperLib = "1.0.8"
 bStats = "3.0.0"
-adventure = "4.17.0"
-adventurePlatformBukkit = "4.3.3"
+adventure = "4.23.0" # Insights-Patched - 1.21.6 Support
+adventurePlatformBukkit = "4.4.0" # Insights-Patched - 1.21.6 Support
 assertj = "3.23.1"
 mockito = "4.11.0"
 jupiter = "5.9.1"
-brigadier = "1.0.18"
+brigadier = "1.3.10" # Insights-Patched - 1.21.4 Support
 placeholderapi = "2.11.6"
 commodore = "2.2"
-cloudPaper = "2.0.0-beta.9"
-cloud = "2.0.0-rc.2"
+cloudPaper = "2.0.0-beta.10" # Insights-Patched - 1.21.4 Support
+cloud = "2.0.0" # Insights-Patched - 1.21.4 Support
 
 # plugins
-shadow = "9.0.0-beta2"
-userdev = "1.7.5"
+shadow = "9.0.0-beta12" # Insights-Patched - 1.21.5 Support
+userdev = "2.0.0-beta.17" # Insights-Patched - 1.21.5 Support
 pluginYml = "0.6.0"
 
 [libraries]
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 20db9ad5c9586383e2ed8c3c4c00862a0e3a6e1c..942039f27b7d6a160ea532d07e047459750b5d37 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-8.14.1-bin.zip
 networkTimeout=10000
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
